name: Laravel
on:
  pull_request:
    branches:
      - '**'
  push:
    branches-ignore:
      - '**'
    tags-ignore:
      - '**'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linting-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: PHPCS
        run: vendor/bin/pint --parallel --test

      - name: Check PSR Violations
        run: composer dump-autoload --strict-psr

      - name: PHPStan
        run: vendor/bin/phpstan analyse

  laravel-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3]

    services:
      maria:
        image: mariadb:11.4
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes
          MARIADB_DATABASE: leafapp_test
        ports:
          - 3306
        options: --health-cmd="mariadb-admin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: xdebug

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Install NPM Dependencies
        run: npm ci

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Asset Packaging
        run: npm run build

      - name: Asset Storage Link
        run: php artisan storage:link

      - name: Execute tests (With Coverage) via Pest ${{ matrix.shard }}/3
        env:
          DB_PORT: ${{ job.services.maria.ports[3306] }}
          DB_CONNECTION: mysql
        run: ./vendor/bin/pest --coverage --min=100 --coverage-html=output --shard=${{ matrix.shard }}/3

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: coverage-html
          path: output
          if-no-files-found: ignore
